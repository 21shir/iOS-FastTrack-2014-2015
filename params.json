{"name":"iOS-Development in Swift 2014-2015","tagline":"Source code and assets for iOS fast-track 2014-2015","body":"### Welcome to iOS Development in Swift (2014-2015).\r\nIf you are an existing developer who wants to learn iOS development, but have no prior experience with iOS, or maybe you have never even used a Mac before, this course is designed for you.\r\n\r\nWhat the course will not be is a series of lectures - in fact I rarely give any lectures on iOS (in any case, others have that covered that really well on iTunes U).\r\n\r\nThis will lab-based learning, which is very much a philosophy used widely in our school. Each section of this course is a series of self-paced practicals. The written materials are published as electronic books, include embedded video and other active elements. Videos are also provided separately so others can reuse them.\r\n\r\n## Objectives:\r\nThe key objective is to make the learners independent in the shortest time. \r\n\r\nMost developers want to teach themselves, but there are hurdles, jargon and new concepts that can stand in the way. Navigating through all the information can seem overwhelming.\r\n\r\nOur aim is to navigate learners through the key concepts and API as quickly as possible. By the end of the course, developers can become autonomous and self-learn the part of the API that interests them most. \r\n\r\nThis model has served us well before, and many of our alumni having gone onto great (and well paid) careers.\r\n\r\n## Key philosophy\r\n\r\nIt should be fun from the start - we get straight into building an app in XCode.\r\nSwift language features will be introduced on demand / in context as opportunity arises.\r\n\r\nIt's not just about Swift and iOS - computer science concepts matter too. Apple sometimes do things differently to others. Students appreciate new and often better ways of thinking.\r\n\r\nThere is a focus on jargon - Jargon is often the clue / gateway to learning new and often unfamiliar concepts. It's also vital to use the documentation\r\n\r\nMinimise the API taught to a core set - teaching hours and hours of API can overload new learners. Teaching too much API can also lead to repetition. By the end of this course, you should be able to pick and learn those parts of the API you need for your app.\r\n\r\nLearning should be an active process - learners are required to write code and solve incrementally challenging problems - solutions are always provided of course\r\n\r\nSample codes / solutions are kept simple and focused - although it's very temping to write beautiful and elegant examples, so cognitive overload is all too easy to achieve as well! Samples will be simple and focused on the point (but still look rather nice).\r\n\r\nLearners are increasingly directed to navigating the excellent Apple documentation / sample code / books + WWDC Videos and other iTunesU courses. \r\n\r\n### Source Code\r\nMany of the challenges and solutions are available from our github repository. \r\n\r\nTo obtain all the sources, type the following from a terminal:\r\n\r\n     git clone https://github.com/SoCM/iOS-FastTrack-2014-2015.git\r\n\r\nHave fun, and do let us know if you find any errors or have any feedback. We'd love to hear from you.\r\nThe best way to get in contact is via the Facebook page https://www.facebook.com/iOSDevAtPlymouth\r\nFailing that, there is email of course.\r\n\r\nNick Outram\r\nAssociate Professor\r\nPlymouth University, UK\r\nnicholas.outram@plymouth.ac.uk\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}